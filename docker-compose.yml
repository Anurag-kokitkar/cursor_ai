version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: code-review-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: code-review-assistant
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - code-review-network

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    container_name: code-review-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - code-review-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: code-review-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/code-review-assistant?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GITHUB_WEBHOOK_SECRET: ${GITHUB_WEBHOOK_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - mongodb
      - redis
    networks:
      - code-review-network
    volumes:
      - ./uploads:/app/uploads

  # Frontend Application
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: code-review-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - code-review-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: code-review-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - frontend
    networks:
      - code-review-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  code-review-network:
    driver: bridge